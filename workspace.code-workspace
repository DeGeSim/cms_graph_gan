{
    "folders": [
        {
            "path": "."
        }
    ],
    "launch": {
        "configurations": [
            {
                "args": [
                    "--tag",
                    "deeptree",
                    // "--debug",
                    "train"
                ],
                "module": "fgsim",
                "name": "t deeptree",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "--tag",
                    "deeptree",
                    // "--debug",
                    "test"
                ],
                "module": "fgsim",
                "name": "test deeptree",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "--tag",
                    "treepc",
                    // "--debug",
                    "train"
                ],
                "module": "fgsim",
                "name": "t treepc",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "--tag",
                    "treepc",
                    "preprocess"
                ],
                "module": "fgsim",
                "name": "preprocess",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "--tag",
                    // "`fd  --type d \".*\" --maxdepth 1 ~/fgsim/wd | sd \".*/(.+)$\" \"\\$1\"|fzf`",
                    "train"
                ],
                "module": "fgsim",
                "name": "t seltag",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "--tag",
                    "`ls ~/fgsim/wd | fzf`",
                    "test"
                ],
                "module": "fgsim",
                "name": "test",
                "request": "launch",
                "type": "python"
            },
            {
                "args": [
                    "loadfile",
                    "${file}"
                ],
                "module": "fgsim",
                "name": "loadfile",
                "request": "launch",
                "type": "python"
            }
        ],
        "version": "0.2.0"
    },
    "settings": {
        "[python]": {
            "editor.codeActionsOnSave": {
                "source.organizeImports": true
            },
            "editor.defaultFormatter": "ms-python.python",
            "editor.formatOnSave": true
        },
        "debug.console.closeOnEnd": true,
        "debug.terminal.clearBeforeReusing": true,
        "editor.formatOnSave": true,
        "jupyter.jupyterLaunchRetries": 1,
        "jupyter.jupyterServerType": "local",
        "python.analysis.typeCheckingMode": "strict",
        "python.defaultInterpreterPath": "${workspaceFolder}/venv1.10.1+cu111/bin/python",
        "python.envFile": "${workspaceFolder}/.env",
        "python.formatting.blackPath": "${env:HOME}/.local/bin/black",
        "python.formatting.provider": "black",
        "python.languageServer": "Default",
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "${env:HOME}/.local/bin/pflake8",
        "python.linting.lintOnSave": true,
        "python.linting.mypyEnabled": true,
        "python.linting.mypyPath": "${env:HOME}/.local/bin/mypy",
        "python.linting.pylintArgs": [
            "--generated-members=numpy.* ,torch.*",
            "--disable=E0402,C0116,logging-fstring-interpolation"
        ],
        "python.linting.pylintEnabled": true,
        "python.linting.pylintPath": "${workspaceFolder}/venv1.10.1+cu111/bin/pylint",
        "python.pipenvPath": "${env:HOME}/.local/bin/pipenv",
        "python.pythonPath": "${workspaceFolder}/venv1.10.1+cu111/bin/python",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false
    },
    "tasks": {
        "tasks": [
            {
                "args": [],
                "command": "pytest",
                "group": {
                    "isDefault": true,
                    "kind": "test"
                },
                "isBackground": false,
                "label": "Run test",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "type": "shell"
            }
        ],
        "version": "2.0.0"
    }
}
